Loglevel debug
Listen 38080

LoadModule cgid_module modules/mod_cgid.so
<Location />
    AddHandler cgi-script .cgi
    Options Indexes FollowSymLinks ExecCGI
</Location>

<Location /server-version>
    mrubyHandlerMiddleCode 'Apache.rputs Apache.server_version'
</Location>

# test for echo
<Location /echo-test>
    mrubyHandlerMiddle __MOD_MRUBY_TEST_DIR__/htdocs/echo.rb
</Location>

# test for simple hello world
<Location /hello-inline>
    mrubyHandlerMiddleCode 'Apache.rputs "hello"'
</Location>

# test for proxy
LoadModule proxy_module __APLIBEXECDIR__/mod_proxy.so
LoadModule proxy_http_module __APLIBEXECDIR__/mod_proxy_http.so
<Location /proxy>
  mrubyTranslateNameMiddle __MOD_MRUBY_TEST_DIR__/htdocs/proxy_request.rb
</Location>
Listen 127.0.0.1:8081
<VirtualHost 127.0.0.1:8081>
  <Location /proxy-reply>
    mrubyHandlerMiddle __MOD_MRUBY_TEST_DIR__/htdocs/proxy_reply.rb
  </Location>
</VirtualHost>

# test for output filter
<FilesMatch "^.*\.html">
    SetOutputFilter mruby
    mrubyOutputFilter __MOD_MRUBY_TEST_DIR__/htdocs/output_filter.rb
</FilesMatch>

# test for request and response headers
<Location /header>
  mrubyHandlerMiddle __MOD_MRUBY_TEST_DIR__/htdocs/header.rb
</Location>

# test for set status code
<Location /service-unavailable>
  mrubyHandlerMiddleCode 'Apache.return Apache::HTTP_SERVICE_UNAVAILABLE'
</Location>

# test for set/get document root
<Location /document-root>
  mrubyHandlerMiddle __MOD_MRUBY_TEST_DIR__/htdocs/document_root.rb
</Location>

# test for request body
<Location /request-body>
  mrubyHandlerMiddle __MOD_MRUBY_TEST_DIR__/htdocs/request_body.rb
</Location>

# test for notes
<Location /note>
  mrubyAccessCheckerMiddle __MOD_MRUBY_TEST_DIR__/htdocs/write_note.rb
  mrubyHandlerMiddle __MOD_MRUBY_TEST_DIR__/htdocs/read_note.rb
</Location>

# test for basic auth
<Location /basic/>
  AuthType basic
  AuthName "Message for clients"
  AuthBasicProvider mruby
  mrubyAuthnCheckPassword __MOD_MRUBY_TEST_DIR__/htdocs/authn_basic.rb
  require valid-user
  mrubyHandlerMiddleCode 'Apache.rputs "basic auth allowed"'
</Location>

# test for Apache::Connection
<Location /conn-ip>
  mrubyHandlerMiddleCode 'Apache.rputs "server:#{Apache::Connection.new.local_ip}:#{Apache::Connection.new.local_port},client:#{Apache::Connection.new.remote_ip}"'
</Location>

# test for Apache::Server
<Location /server-obj>
  mrubyHandlerMiddleCode 'Apache.rputs Apache::Server.new.class'
</Location>

# test for Apache::Env
<Location /env>
  mrubyHandlerMiddleCode 'Apache.rputs "QUERY_STRING:#{Apache::Env.new["QUERY_STRING"]}"'
</Location>

# test for Apache::Scoreboard
<Location /scoreboard-obj>
  mrubyHandlerMiddleCode 'Apache.rputs Apache::Scoreboard.new.class'
</Location>

# test for thread id
<Location /tid>
  mrubyHandlerMiddleCode 'Apache.rputs Apache.get_tid.to_s'
</Location>

# test for output filter
<Location /error-filter>
  mrubyHandlerMiddleCode 'Apache::Request.new.filename = "#{Apache::Server.new.document_root}/index.html"'
  SetOutputFilter mruby
  mrubyOutputFilter __MOD_MRUBY_TEST_DIR__/htdocs/output_error_filter.rb
</Location>

# test for Aoache::Filter#{body,body=}
<Location /body-filter>
  mrubyHandlerMiddleCode 'Apache::Request.new.filename = "#{Apache::Server.new.document_root}/index.html"'
  SetOutputFilter mruby
  mrubyOutputFilter __MOD_MRUBY_TEST_DIR__/htdocs/output_body_filter.rb
</Location>

# test for get server class
<Location /server_class>
  mrubyHandlerMiddleCode 'Apache.rputs get_server_class.to_s'
</Location>

# test for response time
<Location /response_time>
  mrubyHandlerMiddleCode 'sleep 2; Apache.rputs Apache::Request.new.response_time.to_i.to_s'
</Location>

# test for logger
<Location /logger>
  mrubyHandlerMiddleCode 'Apache.log Apache::APLOG_DEBUG, "FJRRWZQJUQTKPAUP"'
</Location>

# test for rack-based api
# you need semicolon and backslash at the last of line if you want linefeed
<Location /rack_base>
  mrubyHandlerMiddleCode '                                         \
    class RackTest;                                                \
      def call(env);                                               \
        [200, {"x-hoge" => "foo"}, ["rack body"]];                 \
      end;                                                         \
    end;                                                           \
    run RackTest.new     '
</Location>

<Location /rack_base1>
  mrubyHandlerMiddleCode '                                         \
    class RackTest;                                                \
      def call(env);                                               \
        [                                                          \
          200,                                                     \
          {"x-hoge" => "foo", "x-foo" => "hoge"},                  \
          ["rack", " body"]                                        \
        ];                                                         \
      end;                                                         \
    end;                                                           \
    run RackTest.new     '
</Location>

<Location /rack_base2>
  mrubyHandlerMiddleCode '                                         \
    class RackTest;                                                \
      def call(env);                                               \
        [                                                          \
          200,                                                     \
          [["x-hoge", "foo"], ["x-foo", "hoge"]],                  \
          ["rack", " body"]                                        \
        ];                                                         \
      end;                                                         \
    end;                                                           \
    run RackTest.new     '
</Location>

<Location /rack_base3>
  mrubyHandlerMiddleCode '                                         \
    class RackTest;                                                \
      def call(env);                                               \
        [404, [], []];                                             \
      end;                                                         \
    end;                                                           \
    run RackTest.new     '
</Location>

<Location /rack_base_env>
  mrubyHandlerMiddleCode '                                         \
    class RackTest;                                                \
      def call(env);                                               \
        [200, [], [JSON.generate(env)]];                           \
      end;                                                         \
    end;                                                           \
    run RackTest.new     '
</Location>

<Location /rack_base_2phase>
  mrubyAccessCheckerMiddleCode '                                   \
   class AccessCheck;                                              \
     def call(env);                                                \
       if env["HTTP_AUTH_TOKEN"] == "aaabbbccc";                   \
         [                                                         \
           Apache::DECLINED,                                       \
           {"x-client-ip" => env["REMOTE_ADDR"]},                  \
           []                                                      \
         ];                                                        \
       else;                                                       \
         [403, {}, []];                                            \
       end;                                                        \
     end;                                                          \
   end;                                                            \
   run AccessCheck.new        '

  mrubyHandlerMiddleCode '                                         \
    class RackTest;                                                \
      def call(env);                                               \
        [200, [], ["OK"]];                                         \
      end;                                                         \
    end;                                                           \
    run RackTest.new     '
</Location>

<Location /rack_base_push>
  mrubyHandlerMiddleCode '                                         \
   p = Proc.new do |env|;                                          \
     push_paths = [];                                              \
     if env["PATH_INFO"] == "/rack_base_push/index.txt";           \
       push_paths << "/index.js";                                  \
     end;                                                          \
     [                                                             \
       200,                                                        \
       push_paths.empty? ? {} : {                                  \
         "link" => push_paths.map{|p|                              \
         "<#{p}>; rel=preload"}.join()                             \
       },                                                          \
       ["push"]                                                    \
     ];                                                            \
   end;                                                            \
   run p                 '
</Location>

# test for cutom timeout
<Location /sleep.cgi>
  mrubyFixupsMiddleCode ' \
    Userdata.new.default_timeout = Apache::Server.new.timeout; \
    Apache::Server.new.timeout = 3000000; \
    Apache.log Apache::APLOG_NOTICE, "default timeout: #{Userdata.new.default_timeout} current_timeout: #{Apache::Server.new.timeout}"'
  mrubyLogTransactionMiddleCode 'Apache::Server.new.timeout = Userdata.new.default_timeout'
</Location>

